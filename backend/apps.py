# backend/apps.py - –û–ù–û–í–õ–ï–ù–ê –í–ï–†–°–Ü–Ø –∑ —Å–∏–≥–Ω–∞–ª–∞–º–∏
import os
import threading
from django.apps import AppConfig
from django.core.management import call_command


class BackendConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'backend'

    def ready(self):
        # üöÄ –Ü–ú–ü–û–†–¢–£–Ñ–ú–û –°–ò–ì–ù–ê–õ–ò –ü–ï–†–®–ò–ú –î–ï–õ–û–ú
        try:
            from . import signals
            print("üì° Django signals —É—Å–ø—ñ—à–Ω–æ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ!")
        except ImportError as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É —Å–∏–≥–Ω–∞–ª—ñ–≤: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è –Ü–Ω—à–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ —Å–∏–≥–Ω–∞–ª—ñ–≤: {e}")

        # Email —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è —Ç—ñ–ª—å–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É
        if os.environ.get('RUN_MAIN') == 'true':  # —â–æ–± –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª–æ—Å—å –¥–≤—ñ—á—ñ
            def run_fetch():
                try:
                    call_command('fetch_leads_from_email', '--loop')
                except Exception as e:
                    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ email —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó: {e}")

            thread = threading.Thread(target=run_fetch)
            thread.daemon = True
            thread.start()
            print("üìß Email —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑–∞–ø—É—â–µ–Ω–∞")

        print("üöÄ Backend ERP/CRM —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")