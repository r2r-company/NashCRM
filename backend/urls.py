# üî• –¢–ò–ú–ß–ê–°–û–í–ò–ô DEBUG –î–õ–Ø backend/urls.py
# –î–æ–¥–∞–π—Ç–µ —Ü–µ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ —Ñ–∞–π–ª—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

from django.urls import path, include
from django.http import JsonResponse
from rest_framework.routers import DefaultRouter
from rest_framework_simplejwt.views import TokenObtainPairView, TokenRefreshView


# üîç –î–Ü–ê–ì–ù–û–°–¢–ò–ß–ù–ò–ô VIEW
def debug_api_status(request):
    """–î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω–∏–π endpoint –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ API"""
    import sys
    from django.conf import settings

    return JsonResponse({
        "status": "‚úÖ API –ø—Ä–∞—Ü—é—î!",
        "debug_mode": settings.DEBUG,
        "python_path": sys.path,
        "installed_apps": settings.INSTALLED_APPS,
        "message": "–Ø–∫—â–æ –≤–∏ –±–∞—á–∏—Ç–µ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è - –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î"
    })


# üîç –ë–ï–ó–ü–ï–ß–ù–Ü –Ü–ú–ü–û–†–¢–ò –ó –û–ë–†–û–ë–ö–û–Æ –ü–û–ú–ò–õ–û–ö
try:
    from backend.views import (
        ping, LeadViewSet, LoginView, ClientViewSet, ExternalLeadView,
        LeadsReportView, geocode_address, funnel_data, leads_report,
        all_payments, MyTokenObtainPairView, list_managers, ManagerViewSet, CreateLeadView,
        client_segments_for_marketing, create_follow_up_tasks, update_all_client_metrics,
        crm_dashboard, ClientTaskViewSet, ClientInteractionViewSet
    )

    VIEWS_IMPORTED = True
    IMPORT_ERROR = None
except ImportError as e:
    VIEWS_IMPORTED = False
    IMPORT_ERROR = str(e)


    # –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö view-—ñ–≤
    def error_view(request):
        return JsonResponse({
            "error": "Import Error",
            "details": IMPORT_ERROR,
            "message": "–ü—Ä–æ–±–ª–µ–º–∞ –∑ —ñ–º–ø–æ—Ä—Ç–æ–º view-—ñ–≤"
        }, status=500)


    ping = error_view
    ClientViewSet = None

# üõ†Ô∏è ROUTER –ó –ü–ï–†–ï–í–Ü–†–ö–û–Æ
router = DefaultRouter()

# –†–µ—î—Å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —ñ–º–ø–æ—Ä—Ç–∏ —É—Å–ø—ñ—à–Ω—ñ
if VIEWS_IMPORTED and ClientViewSet:
    try:
        router.register(r'leads', LeadViewSet, basename='lead')
        router.register(r'clients', ClientViewSet, basename='client')
        router.register(r'managers', ManagerViewSet, basename='manager')
        router.register(r'client-interactions', ClientInteractionViewSet, basename='client-interaction')
        router.register(r'client-tasks', ClientTaskViewSet, basename='client-task')
        ROUTER_REGISTERED = True
    except Exception as e:
        ROUTER_REGISTERED = False
        ROUTER_ERROR = str(e)
else:
    ROUTER_REGISTERED = False
    ROUTER_ERROR = "Views not imported"

# üî• URL PATTERNS
urlpatterns = [
    # –î—ñ–∞–≥–Ω–æ—Å—Ç–∏—á–Ω—ñ endpoints
    path('debug/', debug_api_status, name='debug_api'),
    path('status/', lambda r: JsonResponse({
        "views_imported": VIEWS_IMPORTED,
        "router_registered": ROUTER_REGISTERED,
        "import_error": IMPORT_ERROR,
        "router_error": ROUTER_ERROR if not ROUTER_REGISTERED else None
    })),
]

# –î–æ–¥–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ URL —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —ñ–º–ø–æ—Ä—Ç–∏ —É—Å–ø—ñ—à–Ω—ñ
if VIEWS_IMPORTED:
    urlpatterns.extend([
        path('ping/', ping),
        path('token/', MyTokenObtainPairView.as_view(), name='token_obtain_pair'),
        path('token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),
        path('login/', LoginView.as_view()),
        path('external-lead/', ExternalLeadView.as_view()),
        path('reports/leads/', LeadsReportView.as_view(), name='api_leads_report'),
        path("geocode/", geocode_address),
        path("funnel/", funnel_data),
        path("leads-report/", leads_report),
        path("payments/", all_payments),
        path("leads/create/", CreateLeadView.as_view(), name="create_lead"),

        # CRM Dashboard
        path('crm/dashboard/', crm_dashboard, name='crm_dashboard'),

        # –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞–º–∏
        path('crm/update-metrics/', update_all_client_metrics, name='update_client_metrics'),
        path('crm/create-tasks/', create_follow_up_tasks, name='create_follow_up_tasks'),
        path('crm/segments/', client_segments_for_marketing, name='client_segments'),
    ])

# –î–æ–¥–∞—î–º–æ router URL —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –≤—ñ–Ω –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π
if ROUTER_REGISTERED:
    urlpatterns += router.urls
else:
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è /clients/
    urlpatterns.append(
        path('clients/', lambda r: JsonResponse({
            "error": "ClientViewSet not available",
            "details": ROUTER_ERROR,
            "suggestion": "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —ñ–º–ø–æ—Ä—Ç–∏ –≤ backend/views.py"
        }, status=500))
    )