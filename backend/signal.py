from django.db.models.signals import post_save, pre_save
from django.dispatch import receiver
from django.contrib.auth.models import User
from django.core.exceptions import ValidationError
from .models import CustomUser, LeadPaymentOperation, Lead
from backend.services.lead_queue import on_lead_closed
from django.utils.timezone import now


@receiver(post_save, sender=User)
def create_custom_user(sender, instance, created, **kwargs):
    if created:
        CustomUser.objects.create(user=instance, interface_type='manager')  # –¥–µ—Ñ–æ–ª—Ç–Ω–æ


# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Å—Ç–∞–Ω–∏ –ª—ñ–¥—ñ–≤
_lead_previous_states = {}


@receiver(pre_save, sender=Lead)
def store_previous_lead_state(sender, instance, **kwargs):
    """–ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω –ª—ñ–¥–∞ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º"""
    if instance.pk:
        try:
            previous = Lead.objects.get(pk=instance.pk)
            _lead_previous_states[instance.pk] = {
                'status': previous.status,
                'price': previous.price,
            }
            print(f"üîç –ó–±–µ—Ä–µ–∂–µ–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω –¥–ª—è –ª—ñ–¥–∞ {instance.pk}: {previous.status}")
        except Lead.DoesNotExist:
            pass

    # –û–Ω–æ–≤–ª—é—î–º–æ timestamp –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É
    if instance.pk:
        try:
            previous = Lead.objects.get(pk=instance.pk)
            if previous.status != instance.status:
                instance.status_updated_at = now()
                print(f"üìÖ –û–Ω–æ–≤–ª–µ–Ω–æ timestamp –¥–ª—è –ª—ñ–¥–∞ {instance.pk}: {previous.status} ‚Üí {instance.status}")
        except Lead.DoesNotExist:
            pass


@receiver(post_save, sender=Lead)
def handle_lead_status_change(sender, instance, created, **kwargs):
    """–û–±—Ä–æ–±–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É –ª—ñ–¥–∞ –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è"""

    # –Ø–∫—â–æ —Ü–µ –Ω–æ–≤–∏–π –ª—ñ–¥ - –Ω–µ –æ–±—Ä–æ–±–ª—è—î–º–æ
    if created:
        print(f"üÜï –°—Ç–≤–æ—Ä–µ–Ω–æ –Ω–æ–≤–∏–π –ª—ñ–¥ {instance.pk} –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º {instance.status}")
        return

    # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω
    previous_state = _lead_previous_states.get(instance.pk)
    if not previous_state:
        print(f"‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Å—Ç–∞–Ω –¥–ª—è –ª—ñ–¥–∞ {instance.pk}")
        return

    previous_status = previous_state['status']
    current_status = instance.status

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Å—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–∏–≤—Å—è
    if previous_status == current_status:
        print(f"‚û°Ô∏è –°—Ç–∞—Ç—É—Å –ª—ñ–¥–∞ {instance.pk} –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è: {current_status}")
        # –û—á–∏—â–∞—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω
        del _lead_previous_states[instance.pk]
        return

    print(f"üìà –õ—ñ–¥ {instance.full_name} (ID: {instance.pk}) –∑–º—ñ–Ω–∏–≤ —Å—Ç–∞—Ç—É—Å: {previous_status} ‚Üí {current_status}")

    # === –°–¢–ê–¢–£–°: "on_the_way" (–≤ –¥–æ—Ä–æ–∑—ñ) - –°–ö–õ–ê–î –í–Ü–î–ü–†–ê–í–ò–í ===
    if current_status == "on_the_way":
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Å "–æ—á—ñ–∫—É–≤–∞–Ω–∞ –æ–ø–ª–∞—Ç–∞"
        operation, created_op = LeadPaymentOperation.objects.get_or_create(
            lead=instance,
            operation_type='expected',
            defaults={
                "amount": instance.price,
                "comment": f"–û—á—ñ–∫—É—î—Ç—å—Å—è –æ–ø–ª–∞—Ç–∞ –∑–∞ –ª—ñ–¥ #{instance.id} - {instance.full_name}"
            }
        )

        if created_op:
            print(f"üí∞ ‚úÖ –°–¢–í–û–†–ï–ù–û –æ—á—ñ–∫—É–≤–∞–Ω—É –æ–ø–ª–∞—Ç—É –¥–ª—è –ª—ñ–¥–∞ {instance.full_name}: {instance.price} –≥—Ä–Ω")
        else:
            print(f"üí∞ ‚ÑπÔ∏è –û—á—ñ–∫—É–≤–∞–Ω–∞ –æ–ø–ª–∞—Ç–∞ –¥–ª—è –ª—ñ–¥–∞ {instance.full_name} –≤–∂–µ —ñ—Å–Ω—É—î: {operation.amount} –≥—Ä–Ω")

    # === –°–¢–ê–¢–£–°: "paid" (–æ–ø–ª–∞—á–µ–Ω–æ) - –í–û–î–Ü–ô –ü–û–í–ï–†–ù–£–í –ì–†–û–®–Ü ===
    elif current_status == "paid":
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Å "–æ—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥ –≤–æ–¥—ñ—è"
        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ actual_cash (—è–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ) –∞–±–æ price —è–∫ fallback
        amount_received = instance.actual_cash or instance.price or 0

        operation = LeadPaymentOperation.objects.create(
            lead=instance,
            operation_type='received',
            amount=amount_received,
            comment=f"–ì—Ä–æ—à—ñ –æ—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥ –≤–æ–¥—ñ—è: {amount_received} –≥—Ä–Ω –∑–∞ –ª—ñ–¥ #{instance.id} - {instance.full_name}"
        )

        print(f"üíµ ‚úÖ –°–¢–í–û–†–ï–ù–û –∑–∞–ø–∏—Å –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≥—Ä–æ—à–µ–π –¥–ª—è –ª—ñ–¥–∞ {instance.full_name}: {amount_received} –≥—Ä–Ω")

        # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑–∞–∫—Ä–∏—Ç—Ç—è –ª—ñ–¥–∞ (–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑ —á–µ—Ä–≥–∏)
        if instance.assigned_to:
            on_lead_closed(instance)
            print(
                f"üîÑ –õ—ñ–¥ {instance.full_name} –∑–∞–∫—Ä–∏—Ç–æ, –ø—Ä–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –Ω–∞—Å—Ç—É–ø–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä—É {instance.assigned_to.username}")

    # === –°–¢–ê–¢–£–°: "declined" (–≤—ñ–¥–º–æ–≤–ª–µ–Ω–æ) ===
    elif current_status == "declined":
        # –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –∑–∞–∫—Ä–∏—Ç—Ç—è –ª—ñ–¥–∞ –±–µ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É
        if instance.assigned_to:
            on_lead_closed(instance)
            print(
                f"‚ùå –õ—ñ–¥ {instance.full_name} –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ, –ø—Ä–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –Ω–∞—Å—Ç—É–ø–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä—É {instance.assigned_to.username}")

    # –û—á–∏—â–∞—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω
    if instance.pk in _lead_previous_states:
        del _lead_previous_states[instance.pk]


# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
def log_lead_status_change(lead, old_status, new_status, user=None):
    """–õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω —Å—Ç–∞—Ç—É—Å—É –¥–ª—è –∞—É–¥–∏—Ç—É"""
    print(f"üìã AUDIT: –õ—ñ–¥ {lead.full_name} (ID: {lead.id})")
    print(f"   –°—Ç–∞—Ç—É—Å: {old_status} ‚Üí {new_status}")
    print(f"   –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {user.username if user else '–°–∏—Å—Ç–µ–º–∞'}")
    print(f"   –ß–∞—Å: {now()}")
    print(f"   –¶—ñ–Ω–∞: {lead.price} –≥—Ä–Ω")