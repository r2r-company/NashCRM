# backend/management/commands/cleanup_crm_data.py
"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∑–∞—Å—Ç–∞—Ä—ñ–ª–∏—Ö CRM –¥–∞–Ω–∏—Ö
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python manage.py cleanup_crm_data
"""

from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
from backend.models import ClientInteraction, ClientTask


class Command(BaseCommand):
    help = '–û—á–∏—â—É—î –∑–∞—Å—Ç–∞—Ä—ñ–ª—ñ CRM –¥–∞–Ω—ñ'

    def add_arguments(self, parser):
        parser.add_argument(
            '--days',
            type=int,
            default=365,
            help='–í–∏–¥–∞–ª–∏—Ç–∏ –¥–∞–Ω—ñ —Å—Ç–∞—Ä—à—ñ –∑–∞ N –¥–Ω—ñ–≤ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: 365)'
        )
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç–∏ —â–æ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–Ω–æ–≥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è'
        )

    def handle(self, *args, **options):
        days = options['days']
        dry_run = options['dry_run']

        cutoff_date = timezone.now() - timedelta(days=days)

        self.stdout.write(f"üßπ –û—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Å—Ç–∞—Ä—ñ—à–∏—Ö –∑–∞ {cutoff_date.date()}")

        # –ó–∞—Å—Ç–∞—Ä—ñ–ª—ñ –≤–∑–∞—î–º–æ–¥—ñ—ó
        old_interactions = ClientInteraction.objects.filter(
            created_at__lt=cutoff_date
        )

        # –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–¥–∞—á—ñ —Å—Ç–∞—Ä—ñ—à—ñ –∑–∞ —Ä—ñ–∫
        old_completed_tasks = ClientTask.objects.filter(
            status='completed',
            completed_at__lt=cutoff_date
        )

        # –°–∫–∞—Å–æ–≤–∞–Ω—ñ –∑–∞–¥–∞—á—ñ
        cancelled_tasks = ClientTask.objects.filter(
            status='cancelled',
            created_at__lt=cutoff_date
        )

        self.stdout.write(f"üìä –ó–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:")
        self.stdout.write(f"   –í–∑–∞—î–º–æ–¥—ñ—ó: {old_interactions.count()}")
        self.stdout.write(f"   –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–¥–∞—á—ñ: {old_completed_tasks.count()}")
        self.stdout.write(f"   –°–∫–∞—Å–æ–≤–∞–Ω—ñ –∑–∞–¥–∞—á—ñ: {cancelled_tasks.count()}")

        if dry_run:
            self.stdout.write(self.style.WARNING("üîç –ü—Ä–æ–±–Ω–∏–π –∑–∞–ø—É—Å–∫ - –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–¥–∞–ª–µ–Ω–æ"))
            return

        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        confirm = input("–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—è? (yes/no): ")
        if confirm.lower() != 'yes':
            self.stdout.write("‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ")
            return

        # –í–∏–¥–∞–ª—è—î–º–æ –¥–∞–Ω—ñ
        deleted_interactions = old_interactions.count()
        old_interactions.delete()

        deleted_completed = old_completed_tasks.count()
        old_completed_tasks.delete()

        deleted_cancelled = cancelled_tasks.count()
        cancelled_tasks.delete()

        self.stdout.write(
            self.style.SUCCESS(
                f"‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ:\n"
                f"   –í–∑–∞—î–º–æ–¥—ñ—ó: {deleted_interactions}\n"
                f"   –ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–¥–∞—á—ñ: {deleted_completed}\n"
                f"   –°–∫–∞—Å–æ–≤–∞–Ω—ñ –∑–∞–¥–∞—á—ñ: {deleted_cancelled}"
            )
        )