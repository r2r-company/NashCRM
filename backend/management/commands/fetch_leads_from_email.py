from django.core.management.base import BaseCommand
from backend.services.mail_lead_importer import fetch_emails_and_create_leads
from backend.models import EmailIntegrationSettings  # –∞–±–æ –∑–≤—ñ–¥–∫–∏ –≤ —Ç–µ–±–µ —Ü—è –º–æ–¥–µ–ª—å
from datetime import datetime, date
import time

class Command(BaseCommand):
    help = "–Ü–º–ø–æ—Ä—Ç—É—î –ª—ñ–¥–∏ –∑ –ø–æ—à—Ç–∏ —á–µ—Ä–µ–∑ IMAP (–ø–æ –∫–æ–ª—É)"

    def add_arguments(self, parser):
        parser.add_argument(
            '--since',
            type=str,
            help='–î–∞—Ç–∞ –∑ —è–∫–æ—ó –ø–æ—á–∏–Ω–∞—Ç–∏ –ø–∞—Ä—Å–∏—Ç–∏ (—É —Ñ–æ—Ä–º–∞—Ç—ñ YYYY-MM-DD)'
        )
        parser.add_argument(
            '--loop',
            action='store_true',
            help='–ó–∞–ø—É—Å–∫–∞—Ç–∏ –≤ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–æ–º—É —Ü–∏–∫–ª—ñ'
        )
        parser.add_argument(
            '--interval',
            type=int,
            default=None,
            help='–Ü–Ω—Ç–µ—Ä–≤–∞–ª –º—ñ–∂ –∑–∞–ø—É—Å–∫–∞–º–∏ (—Å–µ–∫). –Ø–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ ‚Äî –±–µ—Ä–µ—Ç—å—Å—è –∑ –º–æ–¥–µ–ª—ñ EmailIntegrationSettings'
        )

    def handle(self, *args, **options):
        since = options.get("since") or date.today().strftime("%Y-%m-%d")
        loop = options.get("loop")
        cli_interval = options.get("interval")

        if since:
            try:
                since_date = datetime.strptime(since, "%Y-%m-%d")
            except ValueError:
                self.stderr.write("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏. –ú–∞—î –±—É—Ç–∏: YYYY-MM-DD")
                return
        else:
            since_date = datetime.now()

        try:
            settings = EmailIntegrationSettings.objects.get(name="default")
            interval = cli_interval if cli_interval is not None else settings.check_interval
        except EmailIntegrationSettings.DoesNotExist:
            interval = cli_interval if cli_interval is not None else 30
            self.stderr.write("‚ö†Ô∏è EmailIntegrationSettings –∑ name='default' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é —ñ–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—é.")

        def fetch():
            self.stdout.write(f"üì• –ü–∞—Ä—Å–∏–º–æ –ø–æ—à—Ç—É –∑ {since_date.strftime('%Y-%m-%d')}...")
            try:
                fetch_emails_and_create_leads(start_date=since_date, settings_obj=settings)
                self.stdout.write(self.style.SUCCESS("‚úÖ –õ—ñ–¥–∏ –∑ –ø–æ—à—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–æ!"))
            except Exception as e:
                self.stderr.write(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")

        if loop:
            while True:
                fetch()
                time.sleep(interval)
        else:
            fetch()
